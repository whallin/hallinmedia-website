---
import { getCollection, getEntry } from "astro:content";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return Promise.all(
    blogEntries.map(async (entry) => {
      const authors = await Promise.all(
        entry.data.authors.map((author) => getEntry(author)),
      );
      return {
        params: { slug: entry.slug },
        props: { entry: { ...entry, data: { ...entry.data, authors } } },
      };
    }),
  );
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<main class="prose">
  {entry.data.isDraft}
  <br />
  {entry.data.isFeatured}
  <br />
  {entry.data.title}
  <br />
  {entry.data.excerpt}
  <br />
  {entry.data.publishDate}
  <br />
  {
    entry.data.authors.map((author) => (
      <p>
        {author.data.fullName}
        {author.data.description}
        {author.data.avatarUrl}
      </p>
    ))
  }
  <Content />
</main>

<script
  src="https://giscus.app/client.js"
  data-repo="whallin/hallinmedia-website"
  data-repo-id="R_kgDOKc4lgw"
  data-category="Giscus Comments"
  data-category-id="DIC_kwDOKc4lg84Ca-9R"
  data-mapping="og:title"
  data-strict="0"
  data-reactions-enabled="0"
  data-emit-metadata="0"
  data-input-position="top"
  data-theme="preferred_color_scheme"
  data-lang="en"
  data-loading="lazy"
  crossorigin="anonymous"
  async
></script>
