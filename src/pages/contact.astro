---
import { Icon } from "astro-icon/components";
import { Picture } from "astro:assets";
import ImgContact from "../assets/contactimg.webp";
import { useTranslations } from "../i18n/utils";
import BaseLayout from "../layouts/BaseLayout.astro";

const t = useTranslations(Astro.currentLocale);

type ContactInfo = {
  name: string;
  icon: string;
  href: string;
  hrefText: string;
};

const contactMethods: ContactInfo[] = [
  {
    name: "Resume",
    icon: "ph:read-cv-logo-duotone",
    href: "https://hallin.media/william-hallin-cv-2024.pdf",
    hrefText: "View PDF",
  },
  {
    name: "Email",
    icon: "ph:envelope-duotone",
    href: "mailto:william@hallin.media",
    hrefText: "william@hallin.media",
  },
  {
    name: "Phone",
    icon: "ph:phone-duotone",
    href: "tel:+46706159279",
    hrefText: "+46 70-615 9279",
  },
  {
    name: "Instagram",
    icon: "ph:instagram-logo-duotone",
    href: "https://www.instagram.com/williamhallinn/",
    hrefText: "@williamhallinn",
  },
  {
    name: "LinkedIn",
    icon: "ph:linkedin-logo-duotone",
    href: "https://www.linkedin.com/in/whallin/",
    hrefText: "William Hallin",
  },
];
---

<BaseLayout
  title={t("nav.contact")}
  description="William Hallin is a freelance photographer and digital designer based in SkellefteÃ¥, Sweden."
  icon="ph:phone-duotone"
  article={false}
  showHeader={true}
  showDescription={false}
>
  <div class="flex flex-col gap-8 sm:flex-row sm:gap-20">
    <div class="space-y-4 text-stone-900 dark:text-stone-50">
      <p>
        I always look forward to making new contacts. Whether you are interested
        in working together or just want to ask questions and meet for a coffee,
        I am here!
      </p>
      <p>
        <span class="font-semibold">If you are considering a collaboration</span
        >, please share information about your project, including budget and
        deadline. With these details, I can better understand your needs and
        offer a more accurate quote.
      </p>
      <section class="flex w-fit items-center">
        <Icon name="ph:clock-duotone" class="mr-2 h-6 w-6 text-red-400" />
        <p class="select-none">
          The time in Sweden is currently <span
            id="stockholm-time"
            class="font-serif">00:00:00</span
          >
        </p>
      </section>
    </div>
    <div
      class="flex rotate-0 flex-col items-center gap-4 transition duration-200 hover:rotate-0 sm:rotate-6"
    >
      <Picture
        src={ImgContact}
        alt="Picture of William Hallin"
        width={600}
        formats={["avif", "webp"]}
        class="pointer-events-none select-none rounded-lg drop-shadow-xl"
        loading="eager"
      />
      <span class="text-center text-xs italic text-stone-500"
        >Taken in Mo i Rana, Norway <Icon
          name="twemoji:flag-norway"
          class="ml-1 inline h-4 w-4"
        /></span
      >
    </div>
  </div>
  <div class="mt-8 space-y-6 sm:mt-0">
    {
      contactMethods.map((method) => (
        <div class="flex flex-row items-center gap-4">
          <Icon name={method.icon} class="h-8 w-8 text-red-500" />
          <div class="flex flex-col gap-1">
            <h2 class="font-serif text-stone-900 dark:text-stone-50">
              {method.name}
            </h2>
            <a
              href={method.href}
              target="_blank"
              rel="noopener noreferrer"
              class="text-red-500 transition duration-200 hover:opacity-70 active:opacity-50"
            >
              <div class="flex items-center gap-1">
                <span class="underline underline-offset-4">
                  {method.hrefText}
                </span>
                <Icon name="ph:arrow-up-right-bold" class="inline" />
              </div>
            </a>
          </div>
        </div>
      ))
    }
  </div>
</BaseLayout>

<script>
  updateStockholmTime();
  setInterval(updateStockholmTime, 1000);

  // Get the Stockholm time
  function updateStockholmTime() {
    const timeElement = document.getElementById("stockholm-time");
    if (!timeElement) return;

    timeElement.textContent = new Intl.DateTimeFormat([], {
      timeZone: "Europe/Stockholm",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      hour12: true,
    }).format(new Date());
  }
</script>
