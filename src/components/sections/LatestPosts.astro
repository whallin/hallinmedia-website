---
import { getCollection, render } from "astro:content";

const translations = {
  en: {
    heading: "Latest from the newsletter",
    description:
      "I write about various topics from time to time, some more interesting than others, but I'm sure you'll find a heading that catches your eye. You can also ",
    linkText: "browse all posts",
    description2: "if you wish.",
    articleReadTime: "min read",
    articleCTA: "Read more",
  },
  sv: {
    heading: "Senaste från nyhetsbrevet",
    description:
      "Jag skriver om olika ämnen då och då, några mer intressanta än andra, men jag är säker på att du hittar en rubrik som fångar ditt intresse. Du kan också ",
    linkText: "bläddra bland alla inlägg",
    description2: "om du önskar.",
    articleReadTime: "min att läsa",
    articleCTA: "Läs mer",
  },
};

// Get the correct collection based on locale
const blogPosts = await getCollection(
  Astro.currentLocale === "sv" ? "blogSvCollection" : "blogEnCollection"
).then(async (posts) => {
  const postsWithReadTime = await Promise.all(
    posts.map(async (post) => {
      const { remarkPluginFrontmatter } = await render(post);
      return {
        ...post,
        data: {
          ...post.data,
          readTime: Math.ceil(remarkPluginFrontmatter.readingTime),
        },
      };
    })
  );
  return postsWithReadTime;
});

const latestPosts = blogPosts
  .sort(
    (a, b) => new Date(b.data.publishedDate).getTime() - new Date(a.data.publishedDate).getTime()
  )
  .slice(0, 5);
---

<section class="flex flex-col gap-6 selection:bg-red-300 selection:text-red-800">
  <header class="flex flex-col gap-2">
    <h2 class="font-serif text-3xl font-light text-stone-900 italic">
      {translations[Astro.currentLocale].heading}
    </h2>
    <p class="font-serif text-sm font-light text-stone-700">
      {translations[Astro.currentLocale].description}<a
        href="/blog"
        class="text-red-500 underline decoration-dashed decoration-from-font underline-offset-4 hover:bg-red-500 hover:text-stone-50 hover:no-underline active:opacity-50"
        >{translations[Astro.currentLocale].linkText}</a
      >
      {translations[Astro.currentLocale].description2}
    </p>
  </header>
  {
    latestPosts.map((post) => (
      <article>
        <a
          href={`/blog/${post.id}`}
          class="group flex flex-col gap-1 active:opacity-50 sm:flex-row sm:items-center sm:justify-between"
        >
          <header class="flex flex-col gap-1">
            <time
              class="font-mono text-xs font-light text-stone-500"
              datetime={post.data.publishedDate}
            >
              {new Date(post.data.publishedDate).toISOString().split("T")[0]} • {post.data.readTime}{" "}
              {translations[Astro.currentLocale].articleReadTime}
            </time>
            <h3 class="font-serif text-xl text-stone-700 italic underline decoration-dashed decoration-from-font underline-offset-4 group-hover:text-red-500">
              {post.data.title}
            </h3>
          </header>
          <footer class="flex h-full w-fit items-center gap-2 text-stone-500 group-hover:bg-red-500 group-hover:text-stone-50">
            <div class="font-mono text-sm font-light">
              {translations[Astro.currentLocale].articleCTA}
            </div>
            <div class="font-mono text-sm font-light select-none">-></div>
          </footer>
        </a>
      </article>
    ))
  }
</section>
