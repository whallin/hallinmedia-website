---
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

export interface Props {
  showHeadings?: boolean;
  showFeaturedFirst?: boolean;
  maxItems?: number;
}

const { showHeadings = true, showFeaturedFirst = true, maxItems = Infinity } = Astro.props;
const locale = Astro.currentLocale === "en" || Astro.currentLocale === "sv" ? Astro.currentLocale : "en";
const faqEntries = await getCollection("faqCollection");

const allQuestions = faqEntries.flatMap((category) =>
  category.data.questions.map((q) => ({ ...q, categoryName: category.data.categoryName[locale] })),
);

const displayQuestions = allQuestions
  .sort((a, b) => (showFeaturedFirst ? (b.featured ? 1 : 0) - (a.featured ? 1 : 0) : 0))
  .slice(0, maxItems);
---

<div class={`space-y-${showHeadings ? "8" : "3"}`}>
  {
    showHeadings ? (
      faqEntries.map((category) => (
        <article class="space-y-4">
          <h2 class="font-serif text-xl text-stone-700 dark:text-stone-200">{category.data.categoryName[locale]}</h2>
          <div class="space-y-3" role="list">
            {category.data.questions
              .sort((a, b) => (showFeaturedFirst ? (b.featured ? 1 : 0) - (a.featured ? 1 : 0) : 0))
              .map((item) => (
                <details
                  class="group overflow-hidden rounded-lg border border-stone-200 dark:border-stone-700"
                  role="listitem"
                >
                  <summary class="flex cursor-pointer items-center justify-between p-4 transition hover:bg-amber-100/50 active:opacity-50 dark:hover:bg-stone-800 dark:active:bg-stone-800/50 [&::-webkit-details-marker]:hidden">
                    <div class="flex min-w-0 items-center gap-2">
                      {item.featured && (
                        <Icon name="ph:star-duotone" class="h-4 w-4 shrink-0 text-yellow-500" aria-hidden="true" />
                      )}
                      <span class="mr-2 font-medium break-words text-stone-700 sm:truncate dark:text-stone-200">
                        {item.question[locale]}
                      </span>
                    </div>
                    <Icon
                      name="ph:caret-down-bold"
                      class="h-5 w-5 shrink-0 text-stone-500 transition-transform group-open:rotate-180 dark:text-stone-400"
                      aria-hidden="true"
                    />
                  </summary>
                  <div class="p-4">
                    <div class="max-w-none text-stone-600 dark:text-stone-300" set:html={item.answer[locale]} />
                  </div>
                </details>
              ))}
          </div>
        </article>
      ))
    ) : (
      <div class="space-y-3" role="list">
        {displayQuestions.map((item) => (
          <details
            class="group overflow-hidden rounded-lg border border-stone-200 dark:border-stone-700"
            role="listitem"
          >
            <summary class="flex cursor-pointer items-center justify-between p-4 transition hover:bg-amber-100/50 active:opacity-50 dark:hover:bg-stone-800 dark:active:bg-stone-800/50 [&::-webkit-details-marker]:hidden">
              <div class="flex min-w-0 items-center gap-2 font-serif">
                {item.featured && (
                  <Icon name="ph:star-duotone" class="h-4 w-4 shrink-0 text-yellow-500" aria-hidden="true" />
                )}
                <span class="mr-2 font-medium break-words text-stone-700 sm:truncate dark:text-stone-200">
                  {item.question[locale]}
                </span>
              </div>
              <Icon
                name="ph:caret-down-bold"
                class="h-5 w-5 shrink-0 text-stone-500 transition-transform group-open:rotate-180 dark:text-stone-400"
                aria-hidden="true"
              />
            </summary>
            <div class="p-4">
              <div class="max-w-none text-stone-600 dark:text-stone-300" set:html={item.answer[locale]} />
            </div>
          </details>
        ))}
      </div>
    )
  }
</div>
