---
import PhCalendarDuotone from "../icons/PhCalendarDuotone.astro";
import PhClockCounterClockwiseDuotone from "../icons/PhClockCounterClockwiseDuotone.astro";
import PhTimerDuotone from "../icons/PhTimerDuotone.astro";
import PhUserDuotone from "../icons/PhUserDuotone.astro";

const translations = {
  en: {
    published_date: "Published Date",
    published: "Published",
    updated_date: "Last Updated",
    updated: "Updated",
    author: "Author",
    reading_time: "Reading Time",
    minutes_read: "min read",
    tags: "Tags",
  },
  sv: {
    published_date: "Publicerat datum",
    published: "Publicerat",
    updated_date: "Senast uppdaterad",
    updated: "Uppdaterad",
    author: "Författare",
    reading_time: "Lästid",
    minutes_read: "min att läsa",
    tags: "Taggar",
  },
};

const { publishedDate, updatedDate, author, readingTime, tags, categoryColor } = Astro.props;

const categoryStyles = {
  sky: "hover:border-sky-500 hover:text-sky-700 active:border-sky-500 active:text-sky-700",
  fuchsia:
    "hover:border-fuchsia-500 hover:text-fuchsia-700 active:border-fuchsia-500 active:text-fuchsia-700",
  rose: "hover:border-rose-500 hover:text-rose-700 active:border-rose-500 active:text-rose-700",
  emerald:
    "hover:border-emerald-500 hover:text-emerald-700 active:border-emerald-500 active:text-emerald-700",
  amber:
    "hover:border-amber-500 hover:text-amber-700 active:border-amber-500 active:text-amber-700",
  indigo:
    "hover:border-indigo-500 hover:text-indigo-700 active:border-indigo-500 active:text-indigo-700",
  pink: "hover:border-pink-500 hover:text-pink-700 active:border-pink-500 active:text-pink-700",
  teal: "hover:border-teal-500 hover:text-teal-700 active:border-teal-500 active:text-teal-700",
};
---

<aside class="grid gap-6 rounded-lg border border-stone-200 p-6 font-mono text-sm text-stone-600">
  <div class="grid gap-4 sm:grid-cols-2">
    <dl class="space-y-2">
      <div class="flex items-center gap-2 selection:bg-sky-300 selection:text-sky-800">
        <dt class="sr-only">{translations[Astro.currentLocale].published_date}</dt>
        <dd class="flex items-center gap-2">
          <PhCalendarDuotone class="h-4 w-4 text-sky-500" />
          <p>
            {translations[Astro.currentLocale].published}: {
              new Date(publishedDate).toLocaleDateString()
            }
          </p>
        </dd>
      </div>
      {
        updatedDate && (
          <div class="flex items-center gap-2 selection:bg-amber-300 selection:text-amber-800">
            <dt class="sr-only">{translations[Astro.currentLocale].updated_date}</dt>
            <dd class="flex items-center gap-2">
              <PhClockCounterClockwiseDuotone class="h-4 w-4 text-amber-500" />
              <p>
                {translations[Astro.currentLocale].updated}:{" "}
                {new Date(updatedDate).toLocaleDateString()}
              </p>
            </dd>
          </div>
        )
      }
    </dl>

    <dl class="space-y-2">
      <div class="flex items-center gap-2 selection:bg-emerald-300 selection:text-emerald-800">
        <dt class="sr-only">{translations[Astro.currentLocale].author}</dt>
        <dd class="flex items-center gap-2">
          <PhUserDuotone class="h-4 w-4 text-emerald-500" />
          <p>{author}</p>
        </dd>
      </div>
      <div class="flex items-center gap-2 selection:bg-fuchsia-300 selection:text-fuchsia-800">
        <dt class="sr-only">{translations[Astro.currentLocale].reading_time}</dt>
        <dd class="flex items-center gap-2">
          <PhTimerDuotone class="h-4 w-4 text-fuchsia-500" />
          <p>{readingTime} {translations[Astro.currentLocale].minutes_read}</p>
        </dd>
      </div>
    </dl>
  </div>

  {
    tags && tags.length > 0 && (
      <div class="border-t border-stone-200 pt-4 selection:bg-red-300 selection:text-red-800">
        <h3 class="mb-2 text-xs font-medium text-stone-500">
          {translations[Astro.currentLocale].tags}
        </h3>
        <div class="flex flex-wrap gap-2">
          {tags.map((tag) => (
            <span
              class={`rounded-full border border-stone-500 px-3 py-1 text-xs transition duration-200 hover:-translate-y-1 active:-translate-y-1 ${categoryStyles[categoryColor]}`}
            >
              #{tag}
            </span>
          ))}
        </div>
      </div>
    )
  }
</aside>
