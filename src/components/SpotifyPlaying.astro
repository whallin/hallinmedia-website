---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import ImgPlaceholder from "../assets/placeholder-spotify-album.jpg";

const translations = {
  en: {
    altText: "Album cover of the last played song",
  },
  sv: {
    altText: "Albumomslag till senast spelade l√•ten",
  },
};

const locale = Astro.currentLocale === "en" || Astro.currentLocale === "sv" ? Astro.currentLocale : "en";
---

<a
  id="spotify-link"
  href="https://open.spotify.com/track/4mLVulIiMo26F6w0AUk40G"
  target="_blank"
  rel="noopener noreferrer"
  class="relative flex w-full items-center gap-3 overflow-hidden rounded-lg border border-green-600/20 bg-green-600/5 p-2 transition hover:bg-green-600/10 active:scale-95 active:opacity-50 dark:border-green-600/30 dark:bg-green-600/10 dark:hover:bg-green-600/20"
>
  <Image
    id="spotify-cover"
    src={ImgPlaceholder}
    alt={translations[locale].altText}
    width={48}
    height={48}
    class="h-12 w-12 rounded-md select-none"
  />
  <div class="min-w-0 flex-1">
    <strong id="spotify-title" class="block truncate text-sm text-stone-900 hover:text-clip dark:text-stone-100">
      Style
    </strong>
    <span id="spotify-artist" class="block truncate text-xs text-stone-500 hover:text-clip dark:text-stone-400">
      KAISUI
    </span>
    <time id="spotify-duration" class="block font-mono text-xs text-green-600" datetime="PT1M24S">1:24</time>
  </div>
  <Icon
    name="ph:spotify-logo"
    class="absolute right-0 bottom-0 -mr-4 -mb-4 h-16 w-16 text-green-600/20"
    aria-hidden="true"
  />
</a>

<script>
  const fetchSpotifyData = async () => {
    try {
      const response = await fetch("https://spotify-last-played.hallin.media/");
      const data = await response.json();

      (document.getElementById("spotify-link") as HTMLAnchorElement).href = data.url;
      (document.getElementById("spotify-cover") as HTMLImageElement).src = data.album_cover;
      (document.getElementById("spotify-title") as HTMLElement).textContent = data.name;
      (document.getElementById("spotify-artist") as HTMLElement).textContent = data.artist;

      const minutes = Math.floor(data.duration_ms / 1000 / 60);
      const seconds = Math.floor((data.duration_ms / 1000) % 60);
      const durationString = `${minutes}:${String(seconds).padStart(2, "0")}`;
      const durationElement = document.getElementById("spotify-duration") as HTMLTimeElement;

      durationElement.textContent = durationString;
      durationElement.setAttribute("datetime", `PT${minutes}M${seconds}S`);
    } catch (error) {
      console.error("Error fetching Spotify data:", error);
    }
  };

  fetchSpotifyData();
</script>
